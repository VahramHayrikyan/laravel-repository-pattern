<?php

namespace App\Models;

use Carbon\Carbon;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\Relations\BelongsTo;
use Illuminate\Database\Eloquent\Relations\HasMany;
use Illuminate\Database\Eloquent\Relations\HasManyThrough;

class Cart extends Model
{
    use HasFactory;
    public $timestamps = false;
    protected $table = 'cart';
    protected $fillable = [
      'user_id',
      'coupon_id',
      'gift_email',
      'timestamp',
    ];

    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub
        static::creating(function ($query) {
            $query->timestamp = Carbon::now();
        });
        static::deleting(function ($query){
            $query->cartProducts()->delete();
        });
    }

//  TODO: Relationship Start
    public function user(): BelongsTo
    {
        return $this->belongsTo(User::class,'user_id','id');
    }
    public function coupon(): BelongsTo
    {
        return $this->belongsTo(Coupon::class, 'coupon_id','id');
    }

    public function cartProducts(): HasMany
    {
        return $this->hasMany(CartProduct::class,'cart_id','id');
    }
    public function products(): HasManyThrough
    {
        return $this->hasManyThrough(Product::class,CartProduct::class,
            'cart_id', // Foreign key on CartProduct table..
            'id', // Foreign key on products table..
            'id', // Local key on CartProduct table...
            'product_id' // Local key on products table...
        );
    }

//  TODO: Relationship End
}
